import os.path
import sys
import pefile
import magic
import re
import time
from oletools.olevba import VBA_Parser, TYPE_OLE, TYPE_OpenXML, TYPE_Word2003_XML, TYPE_MHTML

DOC = ["application/msword", "application/vnd.ms-word.document.macroEnabled.12", "application/vnd.ms-word.template.macroEnabled.12"]
XLS = ["application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "application/vnd.ms-excel", "application/vnd.ms-excel.sheet.macroEnabled.12", "application/vnd.ms-excel.template.macroEnabled.12", "application/vnd.ms-excel.addin.macroEnabled.12", "application/vnd.ms-excel.sheet.binary.macroEnabled.12"]
PPT = ["application/vnd.ms-powerpoint", "application/vnd.ms-powerpoint.presentation.macroEnabled.12", "application/vnd.ms-powerpoint.template.macroEnabled.12", "application/vnd.ms-powerpoint.addin.macroEnabled.12", "application/vnd.ms-powerpoint.slideshow.macroEnabled.12"]
PDF = ["application/pdf"]
EXE = ["application/vnd.microsoft.portable-executable", "application/octet-stream", "application/x-dosexec"]

class Analysis:
    file = None
    mimeType = None
    artifacts = None
    verdict = None
    fileType = None
    decodeStrings = None
    virusTotalResults = None

    def __init__(self, file):
        self.file = file

    def doAnalysis(self):
        # If file is an office document, do this analysis
        if self.fileType == "office":
            # Use OLEVBA.VBA_Parser to parse VBA
            vbaparser = VBA_Parser(self.file)
            # Set IOC attribute to results of VBA parsing
            self.decodeStrings = True
            self.artifacts = vbaparser.analyze_macros(self.decodeStrings)
            # Close parser
            vbaparser.close()
        elif self.fileType == "exe":
            exePefile = pefile()


    def getMimeType(self):
        mime = magic.Magic(mime=True)
        self.mimeType = mime.from_file(self.file)


    def determineVerdict(self):
        #API check with Virustotal
        #Examine artifacts
        self.verdict=""

def main():
    start = time.time()
    #check mime-type of file
    #Automatic analysis or user input to force analysis type?
    #case statement for specific mime-type
        #image file
        #word doc
        #excel doc
        #pdf file
        #exe file
        #dll file
        #etc...

    # Init fileAnalysis object with passed file
    fileAnalysis = Analysis(sys.argv[1])
    # Set mimeType attribute
    fileAnalysis.getMimeType()

    # Check if mimeType attribute is accepted file type
    if (fileAnalysis.mimeType in DOC) or (fileAnalysis.mimeType in XLS) or (fileAnalysis.mimeType in PPT):
        print "This is a Microsoft Office Document"
        fileAnalysis.fileType = "office"
        fileAnalysis.doAnalysis()
        for kw_type, keyword, description in fileAnalysis.artifacts:
            print 'type=%s - keyword=%s - description=%s' % (kw_type, keyword, description)
    elif fileAnalysis.mimeType in PDF:
        print "This is a PDF file"
    elif fileAnalysis.mimeType in EXE:
        print "This is a EXE file"
        fileAnalysis.fileType = "exe"
        fileAnalysis.doAnalysis()
    elif re.match(r"^image\/\w*$", fileAnalysis.mimeType):
        print "This is a image file"
    else:
        print "This file is not supported at this time"

    end = time.time()

    print(end - start)

main()
